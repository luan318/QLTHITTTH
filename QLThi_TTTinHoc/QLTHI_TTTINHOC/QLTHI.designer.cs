#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLTHI_TTTINHOC
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLTHI_TTTINHOC")]
	public partial class QLTHIDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDANGKY(DANGKY instance);
    partial void UpdateDANGKY(DANGKY instance);
    partial void DeleteDANGKY(DANGKY instance);
    partial void InsertHOCVIEN(HOCVIEN instance);
    partial void UpdateHOCVIEN(HOCVIEN instance);
    partial void DeleteHOCVIEN(HOCVIEN instance);
    partial void InsertLICHTHI(LICHTHI instance);
    partial void UpdateLICHTHI(LICHTHI instance);
    partial void DeleteLICHTHI(LICHTHI instance);
    partial void InsertMONHOC_KHOAHOC(MONHOC_KHOAHOC instance);
    partial void UpdateMONHOC_KHOAHOC(MONHOC_KHOAHOC instance);
    partial void DeleteMONHOC_KHOAHOC(MONHOC_KHOAHOC instance);
    partial void InsertKHOAHOC(KHOAHOC instance);
    partial void UpdateKHOAHOC(KHOAHOC instance);
    partial void DeleteKHOAHOC(KHOAHOC instance);
    partial void InsertGIANGVIEN(GIANGVIEN instance);
    partial void UpdateGIANGVIEN(GIANGVIEN instance);
    partial void DeleteGIANGVIEN(GIANGVIEN instance);
    partial void InsertPHONGHOC(PHONGHOC instance);
    partial void UpdatePHONGHOC(PHONGHOC instance);
    partial void DeletePHONGHOC(PHONGHOC instance);
    partial void InsertMONHOC(MONHOC instance);
    partial void UpdateMONHOC(MONHOC instance);
    partial void DeleteMONHOC(MONHOC instance);
    #endregion
		
		public QLTHIDataContext() : 
				base(global::QLTHI_TTTINHOC.Properties.Settings.Default.QLTHI_TTTINHOCConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLTHIDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLTHIDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLTHIDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLTHIDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DANGKY> DANGKies
		{
			get
			{
				return this.GetTable<DANGKY>();
			}
		}
		
		public System.Data.Linq.Table<HOCVIEN> HOCVIENs
		{
			get
			{
				return this.GetTable<HOCVIEN>();
			}
		}
		
		public System.Data.Linq.Table<LICHTHI> LICHTHIs
		{
			get
			{
				return this.GetTable<LICHTHI>();
			}
		}
		
		public System.Data.Linq.Table<MONHOC_KHOAHOC> MONHOC_KHOAHOCs
		{
			get
			{
				return this.GetTable<MONHOC_KHOAHOC>();
			}
		}
		
		public System.Data.Linq.Table<KHOAHOC> KHOAHOCs
		{
			get
			{
				return this.GetTable<KHOAHOC>();
			}
		}
		
		public System.Data.Linq.Table<GIANGVIEN> GIANGVIENs
		{
			get
			{
				return this.GetTable<GIANGVIEN>();
			}
		}
		
		public System.Data.Linq.Table<PHONGHOC> PHONGHOCs
		{
			get
			{
				return this.GetTable<PHONGHOC>();
			}
		}
		
		public System.Data.Linq.Table<MONHOC> MONHOCs
		{
			get
			{
				return this.GetTable<MONHOC>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DANGKY")]
	public partial class DANGKY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _makhoa;
		
		private string _mamon;
		
		private string _mahocvien;
		
		private System.Nullable<double> _diem;
		
		private EntitySet<LICHTHI> _LICHTHIs;
		
		private EntityRef<HOCVIEN> _HOCVIEN;
		
		private EntityRef<KHOAHOC> _KHOAHOC;
		
		private EntityRef<MONHOC> _MONHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmakhoaChanging(string value);
    partial void OnmakhoaChanged();
    partial void OnmamonChanging(string value);
    partial void OnmamonChanged();
    partial void OnmahocvienChanging(string value);
    partial void OnmahocvienChanged();
    partial void OndiemChanging(System.Nullable<double> value);
    partial void OndiemChanged();
    #endregion
		
		public DANGKY()
		{
			this._LICHTHIs = new EntitySet<LICHTHI>(new Action<LICHTHI>(this.attach_LICHTHIs), new Action<LICHTHI>(this.detach_LICHTHIs));
			this._HOCVIEN = default(EntityRef<HOCVIEN>);
			this._KHOAHOC = default(EntityRef<KHOAHOC>);
			this._MONHOC = default(EntityRef<MONHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_makhoa", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string makhoa
		{
			get
			{
				return this._makhoa;
			}
			set
			{
				if ((this._makhoa != value))
				{
					if (this._KHOAHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmakhoaChanging(value);
					this.SendPropertyChanging();
					this._makhoa = value;
					this.SendPropertyChanged("makhoa");
					this.OnmakhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mamon", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string mamon
		{
			get
			{
				return this._mamon;
			}
			set
			{
				if ((this._mamon != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmamonChanging(value);
					this.SendPropertyChanging();
					this._mamon = value;
					this.SendPropertyChanged("mamon");
					this.OnmamonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mahocvien", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string mahocvien
		{
			get
			{
				return this._mahocvien;
			}
			set
			{
				if ((this._mahocvien != value))
				{
					if (this._HOCVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmahocvienChanging(value);
					this.SendPropertyChanging();
					this._mahocvien = value;
					this.SendPropertyChanged("mahocvien");
					this.OnmahocvienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diem", DbType="Float")]
		public System.Nullable<double> diem
		{
			get
			{
				return this._diem;
			}
			set
			{
				if ((this._diem != value))
				{
					this.OndiemChanging(value);
					this.SendPropertyChanging();
					this._diem = value;
					this.SendPropertyChanged("diem");
					this.OndiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DANGKY_LICHTHI", Storage="_LICHTHIs", ThisKey="makhoa,mamon,mahocvien", OtherKey="makhoa,mamon,mahocvien")]
		public EntitySet<LICHTHI> LICHTHIs
		{
			get
			{
				return this._LICHTHIs;
			}
			set
			{
				this._LICHTHIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCVIEN_DANGKY", Storage="_HOCVIEN", ThisKey="mahocvien", OtherKey="mahocvien", IsForeignKey=true)]
		public HOCVIEN HOCVIEN
		{
			get
			{
				return this._HOCVIEN.Entity;
			}
			set
			{
				HOCVIEN previousValue = this._HOCVIEN.Entity;
				if (((previousValue != value) 
							|| (this._HOCVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCVIEN.Entity = null;
						previousValue.DANGKies.Remove(this);
					}
					this._HOCVIEN.Entity = value;
					if ((value != null))
					{
						value.DANGKies.Add(this);
						this._mahocvien = value.mahocvien;
					}
					else
					{
						this._mahocvien = default(string);
					}
					this.SendPropertyChanged("HOCVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOAHOC_DANGKY", Storage="_KHOAHOC", ThisKey="makhoa", OtherKey="makhoa", IsForeignKey=true)]
		public KHOAHOC KHOAHOC
		{
			get
			{
				return this._KHOAHOC.Entity;
			}
			set
			{
				KHOAHOC previousValue = this._KHOAHOC.Entity;
				if (((previousValue != value) 
							|| (this._KHOAHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOAHOC.Entity = null;
						previousValue.DANGKies.Remove(this);
					}
					this._KHOAHOC.Entity = value;
					if ((value != null))
					{
						value.DANGKies.Add(this);
						this._makhoa = value.makhoa;
					}
					else
					{
						this._makhoa = default(string);
					}
					this.SendPropertyChanged("KHOAHOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_DANGKY", Storage="_MONHOC", ThisKey="mamon", OtherKey="mamon", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.DANGKies.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.DANGKies.Add(this);
						this._mamon = value.mamon;
					}
					else
					{
						this._mamon = default(string);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LICHTHIs(LICHTHI entity)
		{
			this.SendPropertyChanging();
			entity.DANGKY = this;
		}
		
		private void detach_LICHTHIs(LICHTHI entity)
		{
			this.SendPropertyChanging();
			entity.DANGKY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOCVIEN")]
	public partial class HOCVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _mahocvien;
		
		private string _tenhocvien;
		
		private string _gioitinh;
		
		private System.Nullable<System.DateTime> _ngaysinh;
		
		private string _dienthoai;
		
		private string _diachi;
		
		private EntitySet<DANGKY> _DANGKies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmahocvienChanging(string value);
    partial void OnmahocvienChanged();
    partial void OntenhocvienChanging(string value);
    partial void OntenhocvienChanged();
    partial void OngioitinhChanging(string value);
    partial void OngioitinhChanged();
    partial void OnngaysinhChanging(System.Nullable<System.DateTime> value);
    partial void OnngaysinhChanged();
    partial void OndienthoaiChanging(string value);
    partial void OndienthoaiChanged();
    partial void OndiachiChanging(string value);
    partial void OndiachiChanged();
    #endregion
		
		public HOCVIEN()
		{
			this._DANGKies = new EntitySet<DANGKY>(new Action<DANGKY>(this.attach_DANGKies), new Action<DANGKY>(this.detach_DANGKies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mahocvien", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string mahocvien
		{
			get
			{
				return this._mahocvien;
			}
			set
			{
				if ((this._mahocvien != value))
				{
					this.OnmahocvienChanging(value);
					this.SendPropertyChanging();
					this._mahocvien = value;
					this.SendPropertyChanged("mahocvien");
					this.OnmahocvienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenhocvien", DbType="NVarChar(20)")]
		public string tenhocvien
		{
			get
			{
				return this._tenhocvien;
			}
			set
			{
				if ((this._tenhocvien != value))
				{
					this.OntenhocvienChanging(value);
					this.SendPropertyChanging();
					this._tenhocvien = value;
					this.SendPropertyChanged("tenhocvien");
					this.OntenhocvienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioitinh", DbType="NVarChar(5)")]
		public string gioitinh
		{
			get
			{
				return this._gioitinh;
			}
			set
			{
				if ((this._gioitinh != value))
				{
					this.OngioitinhChanging(value);
					this.SendPropertyChanging();
					this._gioitinh = value;
					this.SendPropertyChanged("gioitinh");
					this.OngioitinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaysinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> ngaysinh
		{
			get
			{
				return this._ngaysinh;
			}
			set
			{
				if ((this._ngaysinh != value))
				{
					this.OnngaysinhChanging(value);
					this.SendPropertyChanging();
					this._ngaysinh = value;
					this.SendPropertyChanged("ngaysinh");
					this.OnngaysinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dienthoai", DbType="Char(10)")]
		public string dienthoai
		{
			get
			{
				return this._dienthoai;
			}
			set
			{
				if ((this._dienthoai != value))
				{
					this.OndienthoaiChanging(value);
					this.SendPropertyChanging();
					this._dienthoai = value;
					this.SendPropertyChanged("dienthoai");
					this.OndienthoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diachi", DbType="NVarChar(50)")]
		public string diachi
		{
			get
			{
				return this._diachi;
			}
			set
			{
				if ((this._diachi != value))
				{
					this.OndiachiChanging(value);
					this.SendPropertyChanging();
					this._diachi = value;
					this.SendPropertyChanged("diachi");
					this.OndiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCVIEN_DANGKY", Storage="_DANGKies", ThisKey="mahocvien", OtherKey="mahocvien")]
		public EntitySet<DANGKY> DANGKies
		{
			get
			{
				return this._DANGKies;
			}
			set
			{
				this._DANGKies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DANGKies(DANGKY entity)
		{
			this.SendPropertyChanging();
			entity.HOCVIEN = this;
		}
		
		private void detach_DANGKies(DANGKY entity)
		{
			this.SendPropertyChanging();
			entity.HOCVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LICHTHI")]
	public partial class LICHTHI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _makhoa;
		
		private string _mamon;
		
		private string _mahocvien;
		
		private string _maphong;
		
		private System.DateTime _ngaythi;
		
		private int _tietthi;
		
		private string _magv;
		
		private System.Nullable<int> _thoiluong;
		
		private EntityRef<DANGKY> _DANGKY;
		
		private EntityRef<GIANGVIEN> _GIANGVIEN;
		
		private EntityRef<PHONGHOC> _PHONGHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmakhoaChanging(string value);
    partial void OnmakhoaChanged();
    partial void OnmamonChanging(string value);
    partial void OnmamonChanged();
    partial void OnmahocvienChanging(string value);
    partial void OnmahocvienChanged();
    partial void OnmaphongChanging(string value);
    partial void OnmaphongChanged();
    partial void OnngaythiChanging(System.DateTime value);
    partial void OnngaythiChanged();
    partial void OntietthiChanging(int value);
    partial void OntietthiChanged();
    partial void OnmagvChanging(string value);
    partial void OnmagvChanged();
    partial void OnthoiluongChanging(System.Nullable<int> value);
    partial void OnthoiluongChanged();
    #endregion
		
		public LICHTHI()
		{
			this._DANGKY = default(EntityRef<DANGKY>);
			this._GIANGVIEN = default(EntityRef<GIANGVIEN>);
			this._PHONGHOC = default(EntityRef<PHONGHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_makhoa", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string makhoa
		{
			get
			{
				return this._makhoa;
			}
			set
			{
				if ((this._makhoa != value))
				{
					if (this._DANGKY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmakhoaChanging(value);
					this.SendPropertyChanging();
					this._makhoa = value;
					this.SendPropertyChanged("makhoa");
					this.OnmakhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mamon", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string mamon
		{
			get
			{
				return this._mamon;
			}
			set
			{
				if ((this._mamon != value))
				{
					if (this._DANGKY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmamonChanging(value);
					this.SendPropertyChanging();
					this._mamon = value;
					this.SendPropertyChanged("mamon");
					this.OnmamonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mahocvien", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string mahocvien
		{
			get
			{
				return this._mahocvien;
			}
			set
			{
				if ((this._mahocvien != value))
				{
					if (this._DANGKY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmahocvienChanging(value);
					this.SendPropertyChanging();
					this._mahocvien = value;
					this.SendPropertyChanged("mahocvien");
					this.OnmahocvienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maphong", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maphong
		{
			get
			{
				return this._maphong;
			}
			set
			{
				if ((this._maphong != value))
				{
					if (this._PHONGHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaphongChanging(value);
					this.SendPropertyChanging();
					this._maphong = value;
					this.SendPropertyChanged("maphong");
					this.OnmaphongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaythi", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime ngaythi
		{
			get
			{
				return this._ngaythi;
			}
			set
			{
				if ((this._ngaythi != value))
				{
					this.OnngaythiChanging(value);
					this.SendPropertyChanging();
					this._ngaythi = value;
					this.SendPropertyChanged("ngaythi");
					this.OnngaythiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tietthi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int tietthi
		{
			get
			{
				return this._tietthi;
			}
			set
			{
				if ((this._tietthi != value))
				{
					this.OntietthiChanging(value);
					this.SendPropertyChanging();
					this._tietthi = value;
					this.SendPropertyChanged("tietthi");
					this.OntietthiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_magv", DbType="NVarChar(5)")]
		public string magv
		{
			get
			{
				return this._magv;
			}
			set
			{
				if ((this._magv != value))
				{
					if (this._GIANGVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmagvChanging(value);
					this.SendPropertyChanging();
					this._magv = value;
					this.SendPropertyChanged("magv");
					this.OnmagvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thoiluong", DbType="Int")]
		public System.Nullable<int> thoiluong
		{
			get
			{
				return this._thoiluong;
			}
			set
			{
				if ((this._thoiluong != value))
				{
					this.OnthoiluongChanging(value);
					this.SendPropertyChanging();
					this._thoiluong = value;
					this.SendPropertyChanged("thoiluong");
					this.OnthoiluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DANGKY_LICHTHI", Storage="_DANGKY", ThisKey="makhoa,mamon,mahocvien", OtherKey="makhoa,mamon,mahocvien", IsForeignKey=true)]
		public DANGKY DANGKY
		{
			get
			{
				return this._DANGKY.Entity;
			}
			set
			{
				DANGKY previousValue = this._DANGKY.Entity;
				if (((previousValue != value) 
							|| (this._DANGKY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DANGKY.Entity = null;
						previousValue.LICHTHIs.Remove(this);
					}
					this._DANGKY.Entity = value;
					if ((value != null))
					{
						value.LICHTHIs.Add(this);
						this._makhoa = value.makhoa;
						this._mamon = value.mamon;
						this._mahocvien = value.mahocvien;
					}
					else
					{
						this._makhoa = default(string);
						this._mamon = default(string);
						this._mahocvien = default(string);
					}
					this.SendPropertyChanged("DANGKY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_LICHTHI", Storage="_GIANGVIEN", ThisKey="magv", OtherKey="magv", IsForeignKey=true)]
		public GIANGVIEN GIANGVIEN
		{
			get
			{
				return this._GIANGVIEN.Entity;
			}
			set
			{
				GIANGVIEN previousValue = this._GIANGVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIANGVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIANGVIEN.Entity = null;
						previousValue.LICHTHIs.Remove(this);
					}
					this._GIANGVIEN.Entity = value;
					if ((value != null))
					{
						value.LICHTHIs.Add(this);
						this._magv = value.magv;
					}
					else
					{
						this._magv = default(string);
					}
					this.SendPropertyChanged("GIANGVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGHOC_LICHTHI", Storage="_PHONGHOC", ThisKey="maphong", OtherKey="maphong", IsForeignKey=true)]
		public PHONGHOC PHONGHOC
		{
			get
			{
				return this._PHONGHOC.Entity;
			}
			set
			{
				PHONGHOC previousValue = this._PHONGHOC.Entity;
				if (((previousValue != value) 
							|| (this._PHONGHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONGHOC.Entity = null;
						previousValue.LICHTHIs.Remove(this);
					}
					this._PHONGHOC.Entity = value;
					if ((value != null))
					{
						value.LICHTHIs.Add(this);
						this._maphong = value.maphong;
					}
					else
					{
						this._maphong = default(string);
					}
					this.SendPropertyChanged("PHONGHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MONHOC_KHOAHOC")]
	public partial class MONHOC_KHOAHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _mamon;
		
		private string _makhoa;
		
		private EntityRef<KHOAHOC> _KHOAHOC;
		
		private EntityRef<MONHOC> _MONHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmamonChanging(string value);
    partial void OnmamonChanged();
    partial void OnmakhoaChanging(string value);
    partial void OnmakhoaChanged();
    #endregion
		
		public MONHOC_KHOAHOC()
		{
			this._KHOAHOC = default(EntityRef<KHOAHOC>);
			this._MONHOC = default(EntityRef<MONHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mamon", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string mamon
		{
			get
			{
				return this._mamon;
			}
			set
			{
				if ((this._mamon != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmamonChanging(value);
					this.SendPropertyChanging();
					this._mamon = value;
					this.SendPropertyChanged("mamon");
					this.OnmamonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_makhoa", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string makhoa
		{
			get
			{
				return this._makhoa;
			}
			set
			{
				if ((this._makhoa != value))
				{
					if (this._KHOAHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmakhoaChanging(value);
					this.SendPropertyChanging();
					this._makhoa = value;
					this.SendPropertyChanged("makhoa");
					this.OnmakhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOAHOC_MONHOC_KHOAHOC", Storage="_KHOAHOC", ThisKey="makhoa", OtherKey="makhoa", IsForeignKey=true)]
		public KHOAHOC KHOAHOC
		{
			get
			{
				return this._KHOAHOC.Entity;
			}
			set
			{
				KHOAHOC previousValue = this._KHOAHOC.Entity;
				if (((previousValue != value) 
							|| (this._KHOAHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOAHOC.Entity = null;
						previousValue.MONHOC_KHOAHOCs.Remove(this);
					}
					this._KHOAHOC.Entity = value;
					if ((value != null))
					{
						value.MONHOC_KHOAHOCs.Add(this);
						this._makhoa = value.makhoa;
					}
					else
					{
						this._makhoa = default(string);
					}
					this.SendPropertyChanged("KHOAHOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_MONHOC_KHOAHOC", Storage="_MONHOC", ThisKey="mamon", OtherKey="mamon", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.MONHOC_KHOAHOCs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.MONHOC_KHOAHOCs.Add(this);
						this._mamon = value.mamon;
					}
					else
					{
						this._mamon = default(string);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHOAHOC")]
	public partial class KHOAHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _makhoa;
		
		private string _tenkhoa;
		
		private System.Nullable<System.DateTime> _ngaybd_thi;
		
		private EntitySet<DANGKY> _DANGKies;
		
		private EntitySet<MONHOC_KHOAHOC> _MONHOC_KHOAHOCs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmakhoaChanging(string value);
    partial void OnmakhoaChanged();
    partial void OntenkhoaChanging(string value);
    partial void OntenkhoaChanged();
    partial void Onngaybd_thiChanging(System.Nullable<System.DateTime> value);
    partial void Onngaybd_thiChanged();
    #endregion
		
		public KHOAHOC()
		{
			this._DANGKies = new EntitySet<DANGKY>(new Action<DANGKY>(this.attach_DANGKies), new Action<DANGKY>(this.detach_DANGKies));
			this._MONHOC_KHOAHOCs = new EntitySet<MONHOC_KHOAHOC>(new Action<MONHOC_KHOAHOC>(this.attach_MONHOC_KHOAHOCs), new Action<MONHOC_KHOAHOC>(this.detach_MONHOC_KHOAHOCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_makhoa", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string makhoa
		{
			get
			{
				return this._makhoa;
			}
			set
			{
				if ((this._makhoa != value))
				{
					this.OnmakhoaChanging(value);
					this.SendPropertyChanging();
					this._makhoa = value;
					this.SendPropertyChanged("makhoa");
					this.OnmakhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenkhoa", DbType="NVarChar(20)")]
		public string tenkhoa
		{
			get
			{
				return this._tenkhoa;
			}
			set
			{
				if ((this._tenkhoa != value))
				{
					this.OntenkhoaChanging(value);
					this.SendPropertyChanging();
					this._tenkhoa = value;
					this.SendPropertyChanged("tenkhoa");
					this.OntenkhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaybd_thi", DbType="DateTime")]
		public System.Nullable<System.DateTime> ngaybd_thi
		{
			get
			{
				return this._ngaybd_thi;
			}
			set
			{
				if ((this._ngaybd_thi != value))
				{
					this.Onngaybd_thiChanging(value);
					this.SendPropertyChanging();
					this._ngaybd_thi = value;
					this.SendPropertyChanged("ngaybd_thi");
					this.Onngaybd_thiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOAHOC_DANGKY", Storage="_DANGKies", ThisKey="makhoa", OtherKey="makhoa")]
		public EntitySet<DANGKY> DANGKies
		{
			get
			{
				return this._DANGKies;
			}
			set
			{
				this._DANGKies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOAHOC_MONHOC_KHOAHOC", Storage="_MONHOC_KHOAHOCs", ThisKey="makhoa", OtherKey="makhoa")]
		public EntitySet<MONHOC_KHOAHOC> MONHOC_KHOAHOCs
		{
			get
			{
				return this._MONHOC_KHOAHOCs;
			}
			set
			{
				this._MONHOC_KHOAHOCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DANGKies(DANGKY entity)
		{
			this.SendPropertyChanging();
			entity.KHOAHOC = this;
		}
		
		private void detach_DANGKies(DANGKY entity)
		{
			this.SendPropertyChanging();
			entity.KHOAHOC = null;
		}
		
		private void attach_MONHOC_KHOAHOCs(MONHOC_KHOAHOC entity)
		{
			this.SendPropertyChanging();
			entity.KHOAHOC = this;
		}
		
		private void detach_MONHOC_KHOAHOCs(MONHOC_KHOAHOC entity)
		{
			this.SendPropertyChanging();
			entity.KHOAHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIANGVIEN")]
	public partial class GIANGVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _magv;
		
		private string _tengv;
		
		private string _dienthoai;
		
		private string _diachi;
		
		private string _gioitinh;
		
		private string _trinhdo;
		
		private System.Nullable<System.DateTime> _ngayvaolam;
		
		private EntitySet<LICHTHI> _LICHTHIs;
		
		private EntitySet<MONHOC> _MONHOCs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmagvChanging(string value);
    partial void OnmagvChanged();
    partial void OntengvChanging(string value);
    partial void OntengvChanged();
    partial void OndienthoaiChanging(string value);
    partial void OndienthoaiChanged();
    partial void OndiachiChanging(string value);
    partial void OndiachiChanged();
    partial void OngioitinhChanging(string value);
    partial void OngioitinhChanged();
    partial void OntrinhdoChanging(string value);
    partial void OntrinhdoChanged();
    partial void OnngayvaolamChanging(System.Nullable<System.DateTime> value);
    partial void OnngayvaolamChanged();
    #endregion
		
		public GIANGVIEN()
		{
			this._LICHTHIs = new EntitySet<LICHTHI>(new Action<LICHTHI>(this.attach_LICHTHIs), new Action<LICHTHI>(this.detach_LICHTHIs));
			this._MONHOCs = new EntitySet<MONHOC>(new Action<MONHOC>(this.attach_MONHOCs), new Action<MONHOC>(this.detach_MONHOCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_magv", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string magv
		{
			get
			{
				return this._magv;
			}
			set
			{
				if ((this._magv != value))
				{
					this.OnmagvChanging(value);
					this.SendPropertyChanging();
					this._magv = value;
					this.SendPropertyChanged("magv");
					this.OnmagvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tengv", DbType="NVarChar(30)")]
		public string tengv
		{
			get
			{
				return this._tengv;
			}
			set
			{
				if ((this._tengv != value))
				{
					this.OntengvChanging(value);
					this.SendPropertyChanging();
					this._tengv = value;
					this.SendPropertyChanged("tengv");
					this.OntengvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dienthoai", DbType="Char(10)")]
		public string dienthoai
		{
			get
			{
				return this._dienthoai;
			}
			set
			{
				if ((this._dienthoai != value))
				{
					this.OndienthoaiChanging(value);
					this.SendPropertyChanging();
					this._dienthoai = value;
					this.SendPropertyChanged("dienthoai");
					this.OndienthoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diachi", DbType="NVarChar(50)")]
		public string diachi
		{
			get
			{
				return this._diachi;
			}
			set
			{
				if ((this._diachi != value))
				{
					this.OndiachiChanging(value);
					this.SendPropertyChanging();
					this._diachi = value;
					this.SendPropertyChanged("diachi");
					this.OndiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioitinh", DbType="NVarChar(5)")]
		public string gioitinh
		{
			get
			{
				return this._gioitinh;
			}
			set
			{
				if ((this._gioitinh != value))
				{
					this.OngioitinhChanging(value);
					this.SendPropertyChanging();
					this._gioitinh = value;
					this.SendPropertyChanged("gioitinh");
					this.OngioitinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trinhdo", DbType="NVarChar(20)")]
		public string trinhdo
		{
			get
			{
				return this._trinhdo;
			}
			set
			{
				if ((this._trinhdo != value))
				{
					this.OntrinhdoChanging(value);
					this.SendPropertyChanging();
					this._trinhdo = value;
					this.SendPropertyChanged("trinhdo");
					this.OntrinhdoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayvaolam", DbType="DateTime")]
		public System.Nullable<System.DateTime> ngayvaolam
		{
			get
			{
				return this._ngayvaolam;
			}
			set
			{
				if ((this._ngayvaolam != value))
				{
					this.OnngayvaolamChanging(value);
					this.SendPropertyChanging();
					this._ngayvaolam = value;
					this.SendPropertyChanged("ngayvaolam");
					this.OnngayvaolamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_LICHTHI", Storage="_LICHTHIs", ThisKey="magv", OtherKey="magv")]
		public EntitySet<LICHTHI> LICHTHIs
		{
			get
			{
				return this._LICHTHIs;
			}
			set
			{
				this._LICHTHIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_MONHOC", Storage="_MONHOCs", ThisKey="magv", OtherKey="magv")]
		public EntitySet<MONHOC> MONHOCs
		{
			get
			{
				return this._MONHOCs;
			}
			set
			{
				this._MONHOCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LICHTHIs(LICHTHI entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = this;
		}
		
		private void detach_LICHTHIs(LICHTHI entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = null;
		}
		
		private void attach_MONHOCs(MONHOC entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = this;
		}
		
		private void detach_MONHOCs(MONHOC entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONGHOC")]
	public partial class PHONGHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maphong;
		
		private string _vitri;
		
		private System.Nullable<int> _succhua;
		
		private EntitySet<LICHTHI> _LICHTHIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaphongChanging(string value);
    partial void OnmaphongChanged();
    partial void OnvitriChanging(string value);
    partial void OnvitriChanged();
    partial void OnsucchuaChanging(System.Nullable<int> value);
    partial void OnsucchuaChanged();
    #endregion
		
		public PHONGHOC()
		{
			this._LICHTHIs = new EntitySet<LICHTHI>(new Action<LICHTHI>(this.attach_LICHTHIs), new Action<LICHTHI>(this.detach_LICHTHIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maphong", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maphong
		{
			get
			{
				return this._maphong;
			}
			set
			{
				if ((this._maphong != value))
				{
					this.OnmaphongChanging(value);
					this.SendPropertyChanging();
					this._maphong = value;
					this.SendPropertyChanged("maphong");
					this.OnmaphongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vitri", DbType="NVarChar(20)")]
		public string vitri
		{
			get
			{
				return this._vitri;
			}
			set
			{
				if ((this._vitri != value))
				{
					this.OnvitriChanging(value);
					this.SendPropertyChanging();
					this._vitri = value;
					this.SendPropertyChanged("vitri");
					this.OnvitriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_succhua", DbType="Int")]
		public System.Nullable<int> succhua
		{
			get
			{
				return this._succhua;
			}
			set
			{
				if ((this._succhua != value))
				{
					this.OnsucchuaChanging(value);
					this.SendPropertyChanging();
					this._succhua = value;
					this.SendPropertyChanged("succhua");
					this.OnsucchuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGHOC_LICHTHI", Storage="_LICHTHIs", ThisKey="maphong", OtherKey="maphong")]
		public EntitySet<LICHTHI> LICHTHIs
		{
			get
			{
				return this._LICHTHIs;
			}
			set
			{
				this._LICHTHIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LICHTHIs(LICHTHI entity)
		{
			this.SendPropertyChanging();
			entity.PHONGHOC = this;
		}
		
		private void detach_LICHTHIs(LICHTHI entity)
		{
			this.SendPropertyChanging();
			entity.PHONGHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MONHOC")]
	public partial class MONHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _mamon;
		
		private string _magv;
		
		private string _tenmonhoc;
		
		private System.Nullable<int> _siso;
		
		private System.Nullable<int> _sotc;
		
		private System.Nullable<System.DateTime> _thoigianbd;
		
		private System.Nullable<System.DateTime> _thoigiankt;
		
		private System.Nullable<int> _thoigianthi;
		
		private EntitySet<DANGKY> _DANGKies;
		
		private EntitySet<MONHOC_KHOAHOC> _MONHOC_KHOAHOCs;
		
		private EntityRef<GIANGVIEN> _GIANGVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmamonChanging(string value);
    partial void OnmamonChanged();
    partial void OnmagvChanging(string value);
    partial void OnmagvChanged();
    partial void OntenmonhocChanging(string value);
    partial void OntenmonhocChanged();
    partial void OnsisoChanging(System.Nullable<int> value);
    partial void OnsisoChanged();
    partial void OnsotcChanging(System.Nullable<int> value);
    partial void OnsotcChanged();
    partial void OnthoigianbdChanging(System.Nullable<System.DateTime> value);
    partial void OnthoigianbdChanged();
    partial void OnthoigianktChanging(System.Nullable<System.DateTime> value);
    partial void OnthoigianktChanged();
    partial void OnthoigianthiChanging(System.Nullable<int> value);
    partial void OnthoigianthiChanged();
    #endregion
		
		public MONHOC()
		{
			this._DANGKies = new EntitySet<DANGKY>(new Action<DANGKY>(this.attach_DANGKies), new Action<DANGKY>(this.detach_DANGKies));
			this._MONHOC_KHOAHOCs = new EntitySet<MONHOC_KHOAHOC>(new Action<MONHOC_KHOAHOC>(this.attach_MONHOC_KHOAHOCs), new Action<MONHOC_KHOAHOC>(this.detach_MONHOC_KHOAHOCs));
			this._GIANGVIEN = default(EntityRef<GIANGVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mamon", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string mamon
		{
			get
			{
				return this._mamon;
			}
			set
			{
				if ((this._mamon != value))
				{
					this.OnmamonChanging(value);
					this.SendPropertyChanging();
					this._mamon = value;
					this.SendPropertyChanged("mamon");
					this.OnmamonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_magv", DbType="NVarChar(5)")]
		public string magv
		{
			get
			{
				return this._magv;
			}
			set
			{
				if ((this._magv != value))
				{
					if (this._GIANGVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmagvChanging(value);
					this.SendPropertyChanging();
					this._magv = value;
					this.SendPropertyChanged("magv");
					this.OnmagvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenmonhoc", DbType="NVarChar(30)")]
		public string tenmonhoc
		{
			get
			{
				return this._tenmonhoc;
			}
			set
			{
				if ((this._tenmonhoc != value))
				{
					this.OntenmonhocChanging(value);
					this.SendPropertyChanging();
					this._tenmonhoc = value;
					this.SendPropertyChanged("tenmonhoc");
					this.OntenmonhocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_siso", DbType="Int")]
		public System.Nullable<int> siso
		{
			get
			{
				return this._siso;
			}
			set
			{
				if ((this._siso != value))
				{
					this.OnsisoChanging(value);
					this.SendPropertyChanging();
					this._siso = value;
					this.SendPropertyChanged("siso");
					this.OnsisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sotc", DbType="Int")]
		public System.Nullable<int> sotc
		{
			get
			{
				return this._sotc;
			}
			set
			{
				if ((this._sotc != value))
				{
					this.OnsotcChanging(value);
					this.SendPropertyChanging();
					this._sotc = value;
					this.SendPropertyChanged("sotc");
					this.OnsotcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thoigianbd", DbType="DateTime")]
		public System.Nullable<System.DateTime> thoigianbd
		{
			get
			{
				return this._thoigianbd;
			}
			set
			{
				if ((this._thoigianbd != value))
				{
					this.OnthoigianbdChanging(value);
					this.SendPropertyChanging();
					this._thoigianbd = value;
					this.SendPropertyChanged("thoigianbd");
					this.OnthoigianbdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thoigiankt", DbType="DateTime")]
		public System.Nullable<System.DateTime> thoigiankt
		{
			get
			{
				return this._thoigiankt;
			}
			set
			{
				if ((this._thoigiankt != value))
				{
					this.OnthoigianktChanging(value);
					this.SendPropertyChanging();
					this._thoigiankt = value;
					this.SendPropertyChanged("thoigiankt");
					this.OnthoigianktChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thoigianthi", DbType="Int")]
		public System.Nullable<int> thoigianthi
		{
			get
			{
				return this._thoigianthi;
			}
			set
			{
				if ((this._thoigianthi != value))
				{
					this.OnthoigianthiChanging(value);
					this.SendPropertyChanging();
					this._thoigianthi = value;
					this.SendPropertyChanged("thoigianthi");
					this.OnthoigianthiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_DANGKY", Storage="_DANGKies", ThisKey="mamon", OtherKey="mamon")]
		public EntitySet<DANGKY> DANGKies
		{
			get
			{
				return this._DANGKies;
			}
			set
			{
				this._DANGKies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_MONHOC_KHOAHOC", Storage="_MONHOC_KHOAHOCs", ThisKey="mamon", OtherKey="mamon")]
		public EntitySet<MONHOC_KHOAHOC> MONHOC_KHOAHOCs
		{
			get
			{
				return this._MONHOC_KHOAHOCs;
			}
			set
			{
				this._MONHOC_KHOAHOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_MONHOC", Storage="_GIANGVIEN", ThisKey="magv", OtherKey="magv", IsForeignKey=true)]
		public GIANGVIEN GIANGVIEN
		{
			get
			{
				return this._GIANGVIEN.Entity;
			}
			set
			{
				GIANGVIEN previousValue = this._GIANGVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIANGVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIANGVIEN.Entity = null;
						previousValue.MONHOCs.Remove(this);
					}
					this._GIANGVIEN.Entity = value;
					if ((value != null))
					{
						value.MONHOCs.Add(this);
						this._magv = value.magv;
					}
					else
					{
						this._magv = default(string);
					}
					this.SendPropertyChanged("GIANGVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DANGKies(DANGKY entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_DANGKies(DANGKY entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
		
		private void attach_MONHOC_KHOAHOCs(MONHOC_KHOAHOC entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_MONHOC_KHOAHOCs(MONHOC_KHOAHOC entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
	}
}
#pragma warning restore 1591
